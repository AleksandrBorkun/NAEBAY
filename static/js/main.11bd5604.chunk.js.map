{"version":3,"sources":["components/forms/FormStyles.module.css","pages/AddProduct/AddProductPage.module.css","components/search/search.module.css","components/category/categories.module.css","components/header/header.module.css","components/products/productsTable.module.css","loader.js","components/header/header.tsx","components/firebase/init.tsx","context/AppContext.tsx","components/search/search.tsx","components/category/categories.tsx","components/products/productsTable.tsx","pages/ConsumerHome.tsx","pages/DealerHomepage.tsx","pages/LoginPage.tsx","components/forms/FormInputField.tsx","components/forms/FormSelectField.tsx","components/forms/FormFieldsSet.tsx","pages/AddProduct/AddProductPage.tsx","App.tsx","components/firebase/database.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","window","$","jQuery","require","MyAwesomeButton","className","styles","myAwesomeButton","onClick","console","log","Header","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","mountDB","firebase","AppContext","React","createContext","MySearch","props","onSubmit","onSearchSubmited","mySearch","type","placeholder","name","onChange","onSearchFieldChanged","onSelected","value","CategoriesFilterComponent","categoriesContainer","categories","map","item","i","SimpleCategory","category","key","onCategotyButtonClicked","simplpeCategory","ProductsTable","TableHeader","getItems","product","index","Product","tableHeader","col","colmn1","colmn2","colmn3","colmn4","tableRow","data-label","price","ConsumerHome","DealerHomePage","href","initializeApp","uiConfig","signInFlow","signInSuccessUrl","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","LoginPage","firebaseAuth","Component","FormInputField","inputBlock","lbl","label","inputField","multiple","accept","required","values","FormFieldsSet","legend","formFields","formField","id","onProductAddSubmited","style","onFormFieldChanged","FormSelectField","handleFilesChosen","AddedFilesList","formSubmitBtn","ul","addedFiles","image","li","size","removeListItemBtn","handleRemoveClicked","App","bind","state","currentCategory","products","searchValue","searchTemp","filter","paytype","binaryFiles","collection","get","then","resp","docs","doc","data","setState","this","toLowerCase","includes","event","target","preventDefault","temp","files","length","count","file","alert","push","binaryTemp","getBase64","result","add","catch","err","error","document","location","cb","render","FileReader","readAsDataURL","onload","Provider","path","exact","AddProductPage","Boolean","hostname","match","ReactDOM","component","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.11bd5604.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"lbl\":\"FormStyles_lbl__2nX0o\",\"inputField\":\"FormStyles_inputField__3fbST\",\"inputBlock\":\"FormStyles_inputBlock__3h_-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"AddProductPage_ul__mU2DZ\",\"li\":\"AddProductPage_li__3_q93\",\"formSubmitBtn\":\"AddProductPage_formSubmitBtn__bDnLQ\",\"removeListItemBtn\":\"AddProductPage_removeListItemBtn__2OQsr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mySearch\":\"search_mySearch__3lRkh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"categoriesContainer\":\"categories_categoriesContainer__1jdTG\",\"simplpeCategory\":\"categories_simplpeCategory__39egg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myAwesomeButton\":\"header_myAwesomeButton__sN7-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"productsTable_container__3X930\",\"tableHeader\":\"productsTable_tableHeader__3dZFf\",\"tableRow\":\"productsTable_tableRow__3ro77\",\"colmn1\":\"productsTable_colmn1__gI8km\",\"colmn2\":\"productsTable_colmn2__1b4tb\",\"colmn3\":\"productsTable_colmn3__fp1E9\",\"colmn4\":\"productsTable_colmn4__29Gv4\",\"table-row\":\"productsTable_table-row__38eG7\",\"col\":\"productsTable_col__UuelO\"};","window.$ = window.jQuery = require('jquery')","import React from 'react';\r\nimport styles from './header.module.css'\r\n\r\nfunction MyAwesomeButton(){\r\n    return (\r\n        <button className = {styles.myAwesomeButton} onClick= {()=> {console.log(\"button MyAwesomeButton clicked\")}}>MyAwesomeButton</button>\r\n    );\r\n}\r\n\r\n\r\nexport default function Header(){\r\n    return <>\r\n        <MyAwesomeButton/>\r\n        <MyAwesomeButton/>\r\n        <MyAwesomeButton/>\r\n        <MyAwesomeButton/>\r\n    </>\r\n}","\r\nimport * as firebase from \"firebase/app\";\r\n// If you enabled Analytics in your project, add the Firebase SDK for Analytics\r\nimport \"firebase/analytics\";\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA2Q4fowDsJJiGJwXBXw_d6r1mgJyLwMMU\",\r\n    authDomain: \"letsgrof.firebaseapp.com\",\r\n    databaseURL: \"https://letsgrof.firebaseio.com\",\r\n    projectId: \"letsgrof\",\r\n    storageBucket: \"letsgrof.appspot.com\",\r\n    messagingSenderId: \"133159260872\",\r\n    appId: \"1:133159260872:web:fe53f715be06f4bfd8cbfd\",\r\n    measurementId: \"G-CLDSD2SEYH\"\r\n  };\r\n\r\nexport function mountDB(){\r\n    try{\r\n        firebase.initializeApp(firebaseConfig);\r\n    }catch {\r\n        console.log('fb already in use');\r\n    }\r\n    return firebase.firestore();\r\n}","import React from 'react';\r\nconst AppContext = React.createContext({} as any);\r\nexport default AppContext;\r\n","import React from 'react';\r\nimport styles from './search.module.css'\r\n\r\nfunction MySearch(props) {\r\n    return (\r\n        <form className=\"example\" onSubmit={props.onSearchSubmited}>\r\n            <input className={styles.mySearch} type=\"text\" placeholder=\"Search..\" name=\"search\"\r\n                onChange={props.onSearchFieldChanged}></input>\r\n            <select onChange={props.onSelected}>\r\n                <option value='name'>Имя</option>\r\n                <option value='price'>Цена</option>\r\n\r\n            </select>\r\n\r\n            <button className={styles.mySearch} type=\"submit\">Искать ...</button>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default MySearch;\r\n","import React from 'react';\r\nimport styles from './categories.module.css'\r\n\r\nexport function CategoriesFilterComponent(props) {\r\n    return (\r\n        <div>\r\n            <div className={styles.categoriesContainer}>\r\n                {props.categories.map((item, i) => {\r\n                    return <SimpleCategory\r\n                        category={item}\r\n                        key={i}\r\n                        onCategotyButtonClicked={props.onCategotyButtonClicked} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction SimpleCategory(props) {\r\n    return (<button className={styles.simplpeCategory} onClick={() => props.onCategotyButtonClicked(props.category)}>{props.category}</button>)\r\n}","import React from 'react'\r\nimport styles from './productsTable.module.css'\r\n\r\nexport function ProductsTable(props){\r\n    return (\r\n        <div className=\"container\">\r\n            <ul className=\"responsive-table\">\r\n                <TableHeader/>\r\n                {props.getItems().map((product, index) => {\r\n                    return <Product key ={index }index={index} product={product}/>\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n//просто шапка таблици\r\nfunction TableHeader(){\r\n    return (\r\n        <li className={styles.tableHeader}>\r\n            <div className={styles.col + ' ' + styles.colmn1}>Id</div>\r\n            <div className={styles.col + ' ' + styles.colmn2}>Name</div>\r\n            <div className={styles.col + ' ' + styles.colmn3}>Price</div>\r\n            <div className={styles.col + ' ' + styles.colmn4}>Status</div>\r\n        </li>\r\n    )\r\n}\r\n\r\n//один елемент таблици (не шапка)\r\nfunction Product(props){\r\n    return  (\r\n    <li onClick={()=>{console.log(`я нажалась ${props.product.name}`)}}className={styles.tableRow}>\r\n        <div className={styles.col + ' ' + styles.colmn1} data-label=\"Id\">{props.index + 1}</div>\r\n        <div className={styles.col + ' ' + styles.colmn2} data-label=\"Name\">{props.product.name}</div>\r\n        <div className={styles.col + ' ' + styles.colmn3} data-label=\"Price\">{props.product.price}</div>\r\n        <div className={styles.col + ' ' + styles.colmn4} data-label=\"Status\">In Stock</div>\r\n    </li>)\r\n}\r\n\r\ninterface Product {\r\n    name: string,\r\n    price: string,\r\n    category: string\r\n}","import React from 'react'\r\nimport MySearch from '../components/search/search'\r\nimport { CategoriesFilterComponent } from '../components/category/categories'\r\nimport { ProductsTable } from '../components/products/productsTable';\r\n\r\nexport default function ConsumerHome(props){\r\n    return (\r\n    <>\r\n        <MySearch  \r\n            onSearchSubmited={props.onSearchSubmited}\r\n            onSearchFieldChanged={props.onSearchFieldChanged}\r\n            onSelected={props.onSelected}/>\r\n        <CategoriesFilterComponent\r\n          categories={props.categories}\r\n          onCategotyButtonClicked={props.onCategotyButtonClicked}/>\r\n        <ProductsTable getItems={props.getItems} />\r\n    </>)\r\n}","import React from 'react';\r\n\r\nexport default function DealerHomePage(props){\r\n    return (\r\n        <div>\r\n            <h1>Dealer Page</h1>\r\n            <a href='/products/add'>Add Product</a>\r\n        </div>\r\n    )\r\n}","// Import FirebaseAuth and firebase.\r\nimport React from 'react';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport firebase from 'firebase';\r\n\r\n// Configure Firebase.\r\nconst config = {\r\n    apiKey: \"AIzaSyA2Q4fowDsJJiGJwXBXw_d6r1mgJyLwMMU\",\r\n    authDomain: \"letsgrof.firebaseapp.com\",\r\n    databaseURL: \"https://letsgrof.firebaseio.com\",\r\n    projectId: \"letsgrof\",\r\n    storageBucket: \"letsgrof.appspot.com\",\r\n    messagingSenderId: \"133159260872\",\r\n    appId: \"1:133159260872:web:fe53f715be06f4bfd8cbfd\",\r\n    measurementId: \"G-CLDSD2SEYH\"\r\n  // ...\r\n};\r\nfirebase.initializeApp(config);\r\n\r\n// Configure FirebaseUI.\r\nconst uiConfig = {\r\n  // Popup signin flow rather than redirect flow.\r\n  signInFlow: 'popup',\r\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\r\n  signInSuccessUrl: '/signedIn',\r\n  // We will display Google and Facebook as auth providers.\r\n  signInOptions: [\r\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID\r\n  ]\r\n};\r\n\r\nexport default class LoginPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>My App</h1>\r\n        <p>Please sign-in:</p>\r\n        <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport styles from './FormStyles.module.css'\r\n\r\nexport default function FormInputField(props){\r\n    return (\r\n        <div className={styles.inputBlock}>\r\n            <label className ={styles.lbl}>{props.label}</label>\r\n            <input className = {styles.inputField}\r\n                type={props.type}\r\n                onChange={props.onChange} \r\n                placeholder = {props.placeholder}\r\n                name={props.name}\r\n                multiple = {props.multiple}\r\n                accept={props.accept}\r\n                required/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport styles from './FormStyles.module.css'\r\n\r\nexport default function(props){\r\n    return (\r\n        <div className={styles.inputBlock}>\r\n        <label className={styles.lbl}> {props.label} </label>\r\n        <select \r\n            required    \r\n            className = {styles.inputField}\r\n            onChange={props.onChange} \r\n            name={props.name}>\r\n            <option value=\"\">None</option>\r\n            {props.values.map( (value, key) => {\r\n                return <option key={key} value = {value}>{value}</option>\r\n                    }                \r\n                )}\r\n        </select>\r\n    </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function FormFieldsSet(props) {\r\n    return (\r\n        <fieldset>\r\n        <legend className={props.className}>{props.legend}</legend>\r\n            {props.formFields.map(formField => {\r\n                return formField\r\n            })}\r\n        </fieldset>)\r\n}","import React from 'react';\r\nimport FormInputField from '../../components/forms/FormInputField';\r\nimport FormSelectField from '../../components/forms/FormSelectField';\r\nimport styles from './AddProductPage.module.css'\r\nimport FormFieldsSet from '../../components/forms/FormFieldsSet';\r\n\r\nexport default function (props) {\r\n    return (\r\n        <form className='Add New Product' id='title' onSubmit={props.onProductAddSubmited}>\r\n            <h1 style={styles}>Add New Product!</h1>\r\n            <FormFieldsSet\r\n                legend='Product Details'\r\n                formFields={ // < - - - - cюда впихиваем все элементы которые должны быть в сете через запятую\r\n                    [\r\n                        <FormInputField\r\n                            label='Title*'\r\n                            type='text'\r\n                            onChange={props.onFormFieldChanged}\r\n                            name='name'\r\n                            placeholder='Set Title Here' />,\r\n                        <FormSelectField\r\n                            label='Categories*'\r\n                            onChange={props.onFormFieldChanged}\r\n                            name='category'\r\n                            values={props.categories} />,\r\n                        <FormInputField\r\n                            label='Description*'\r\n                            type='text'\r\n                            onChange={props.onFormFieldChanged}\r\n                            placeholder='Set Title Here'\r\n                            name='desc' />,\r\n                        <FormInputField\r\n                            label='Price *'\r\n                            type='text'\r\n                            placeholder='set price'\r\n                            name='price'\r\n                            onChange={props.onFormFieldChanged} />,\r\n                        <FormInputField\r\n                            label='Image *'\r\n                            type='file'\r\n                            accept='image/png, image/jpeg'\r\n                            onChange={props.handleFilesChosen}\r\n                            name='image'\r\n                            multiple={true} />,\r\n                        <AddedFilesList {...props} />\r\n                    ]\r\n                }\r\n            />\r\n            <FormFieldsSet\r\n                legend='Contac Information'\r\n                formFields={[\r\n                    <FormInputField\r\n                        label='Address *'\r\n                        type=\"text\"\r\n                        placeholder=\"Set Address\"\r\n                        name='address'\r\n                        onChange={props.onFormFieldChanged} />,\r\n                    <FormInputField\r\n                        label='Phone Number'\r\n                        type='text'\r\n                        placeholder=\"Phone number\"\r\n                        name='phone'\r\n                        onChange={props.onFormFieldChanged} />,\r\n                    <FormInputField\r\n                        label='The contact person'\r\n                        type='text'\r\n                        placeholder=\"The contact person\"\r\n                        name='ownerId'\r\n                        onChange={props.onFormFieldChanged} />,\r\n                    <FormSelectField\r\n                        label='Payment Type'\r\n                        onChange={props.onFormFieldChanged}\r\n                        name='paytype'\r\n                        values={['PayPal', 'Cash', 'Bank']} />\r\n                ]}\r\n            />\r\n            <button className = {styles.formSubmitBtn} type='submit'>Revise</button>\r\n            <button className = {styles.formSubmitBtn}type='submit'>Save</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nfunction AddedFilesList(props) {\r\n    return <ul className={styles.ul}>\r\n        {props.addedFiles.map((image: File, key) => {\r\n            return (\r\n                <li className={styles.li} key={key}>\r\n                    {image.name} - {image.size}Kb\r\n                    <button className = {styles.removeListItemBtn} type='button' onClick={() => props.handleRemoveClicked(image)}>X</button>\r\n                </li>\r\n            )\r\n        })\r\n        }\r\n    </ul>\r\n}","import React from 'react'\r\nimport \"./App.css\";\r\nimport Header from \"./components/header/header\";\r\nimport { getProducts, getCategories, addNewProduct } from './components/firebase/database';\r\nimport AppContext from './context/AppContext';\r\nimport { Route } from 'react-router';\r\nimport ConsumerHome from './pages/ConsumerHome';\r\nimport DealerHomePage from './pages/DealerHomepage';\r\nimport LoginPage from './pages/LoginPage';\r\nimport AddProductPage from './pages/AddProduct/AddProductPage';\r\n\r\nclass App extends React.Component<any, { [key: string]: any }>{\r\n  constructor(props) {\r\n    super(props);\r\n    this.onCategotyButtonClicked = this.onCategotyButtonClicked.bind(this)\r\n    this.getItems = this.getItems.bind(this)\r\n    this.onSearchFieldChanged = this.onSearchFieldChanged.bind(this)\r\n    this.onSelected = this.onSelected.bind(this)\r\n    this.onSearchSubmited = this.onSearchSubmited.bind(this)\r\n    this.onFormFieldChanged = this.onFormFieldChanged.bind(this)\r\n    this.handleFilesChosen = this.handleFilesChosen.bind(this)\r\n    this.handleRemoveClicked = this.handleRemoveClicked.bind(this)\r\n    this.onProductAddSubmited = this.onProductAddSubmited.bind(this)\r\n    this.state = {\r\n      categories: [] as [],\r\n      currentCategory: 'All',\r\n      products: [] as Product[],\r\n      searchValue: '',\r\n      searchTemp: '',\r\n      filter: 'name',\r\n      addedFiles: [] as File[],\r\n      formField: {\r\n        category: 'all',\r\n        paytype: 'paypal'\r\n      },\r\n      binaryFiles: [] as string[]\r\n    }\r\n  }\r\n\r\n  // выполняеться автоматически при загрузке компонента\r\n  componentDidMount() {\r\n    getProducts().then(resp => {\r\n      this.setState({ products: resp })\r\n    })\r\n    getCategories().then(resp => {\r\n      this.setState({ categories: resp })\r\n    })\r\n  }\r\n\r\n  //выполняется при нажатии на кнопку с категорией\r\n  onCategotyButtonClicked(currentCategory) {\r\n    this.setState({\r\n      currentCategory: currentCategory\r\n    })\r\n  }\r\n\r\n  getItems(): Product[] {\r\n    return this.state.products\r\n      .filter(item => item.category === this.state.currentCategory || this.state.currentCategory === 'All')\r\n      .filter(item => {\r\n        if (this.state.filter === 'name') {\r\n          return item.name.toLowerCase().includes(this.state.searchValue)\r\n        } else {\r\n          return item.price.toLowerCase().includes(this.state.searchValue)\r\n        }\r\n      })\r\n  }\r\n\r\n  onSearchFieldChanged(event) {\r\n    this.setState({\r\n      searchTemp: event.target.value.toLowerCase()\r\n\r\n    })\r\n  }\r\n\r\n  onSearchSubmited(event) {\r\n    event.preventDefault();\r\n    this.setState({\r\n      searchValue: this.state.searchTemp\r\n    })\r\n  }\r\n\r\n  onSelected(event) {\r\n    this.setState({\r\n      filter: event.target.value.toLowerCase()\r\n\r\n    })\r\n  }\r\n\r\n  onFormFieldChanged(event) {\r\n    let temp = this.state.formField;\r\n    let key = event.target.name;\r\n    temp[key] = event.target.value.toLowerCase();\r\n    this.setState({\r\n      formField: temp\r\n    })\r\n  }\r\n\r\n  handleFilesChosen(event) {\r\n    let temp = this.state.addedFiles;\r\n    if (event.target.files && event.target.files.length > 0) {\r\n      let count = temp.length;\r\n      for (let file of event.target.files) {\r\n        if (count > 10) {\r\n          alert('Number of files more than 10')\r\n          break;\r\n        }\r\n        count++;\r\n        temp.push(file)\r\n      }\r\n      this.setState({\r\n        addedFiles: temp\r\n      })\r\n    }\r\n    let binaryTemp = [] as string[]\r\n      for(let i = 0; i < this.state.addedFiles.length; i++){\r\n        const file = this.state.addedFiles[i] as File\r\n        this.getBase64(file, (result : string)=>{\r\n          binaryTemp.push(result)\r\n        })\r\n    }\r\n    this.setState({\r\n      binaryFiles: binaryTemp\r\n    })\r\n}\r\n\r\n  handleRemoveClicked(event: File) {\r\n    let temp = this.state.addedFiles.filter(item => { return item !== event });\r\n    this.setState({\r\n      addedFiles: temp\r\n    })\r\n\r\n  }\r\n\r\n  async onProductAddSubmited(event){\r\n    event.preventDefault();\r\n    if(!this.state.addedFiles){\r\n      alert('Files Should Be Added!!!')\r\n      return;\r\n    }\r\n    addNewProduct({...this.state.formField, image : this.state.binaryFiles}).then(resp => {console.log('Success. Doc Id Is: ' + resp)})\r\n    this.setState({formField: {}})\r\n    document.location.href = '/'\r\n  }\r\n\r\n\r\n  getBase64(file, cb){\r\n    const render = new FileReader();\r\n    render.readAsDataURL(file);\r\n    render.onload = function(file){\r\n      cb(render.result)\r\n    };\r\n  }\r\n\r\n  //выполняеться автоматически. рендерит на экран компоненты\r\n  render() {\r\n    return (\r\n      <AppContext.Provider value={this.state}>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <Route\r\n            path='/NAEBAY'\r\n            exact\r\n            render={() => <ConsumerHome\r\n              categories={this.state.categories}\r\n              onCategotyButtonClicked={this.onCategotyButtonClicked}\r\n              getItems={this.getItems}\r\n              onSearchSubmited={this.onSearchSubmited}\r\n              onSearchFieldChanged={this.onSearchFieldChanged}\r\n              onSelected={this.onSelected} />} />\r\n          <Route\r\n            path='/dealer'\r\n            exact\r\n            render={() => <DealerHomePage />} />\r\n          <Route\r\n            path='/login'\r\n            exact\r\n            render={() => <LoginPage />} />\r\n          <Route\r\n            path='/products/add'\r\n            exact\r\n            render={() => <AddProductPage\r\n              addedFiles={this.state.addedFiles}\r\n              handleFilesChosen={this.handleFilesChosen}\r\n              onFormFieldChanged={this.onFormFieldChanged}\r\n              handleRemoveClicked={this.handleRemoveClicked}\r\n              categories = {this.state.categories}\r\n              onProductAddSubmited = {this.onProductAddSubmited}\r\n            />} />\r\n        </div>\r\n      </AppContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\ninterface Product {\r\n  name: string,\r\n  price: string,\r\n  category: string\r\n}","import { mountDB } from './init';\r\n\r\nexport function getCategories() {\r\n    return mountDB()\r\n        .collection('categories').get()\r\n        .then(resp => {\r\n            return resp.docs.map(doc => { return doc.id })\r\n    })\r\n}\r\n\r\nexport function getProducts() {\r\n    return mountDB()\r\n        .collection('products').get()\r\n        .then(resp => {\r\n            return resp.docs.map(doc => {return doc.data() })\r\n    })\r\n}\r\n\r\nexport function addNewProduct(product : {name: string, desc: string, price: string, category: string, ownerId: string, phone:string, address:string, paytype:string, image: string [] }){\r\n    return mountDB().collection('products').add(product)\r\n        .then(resp => {\r\n            return resp.id\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        })\r\n\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './loader.js'// Firebase App (the core Firebase SDK) is always required and must be listed first\r\nimport {Route, BrowserRouter as Router} from 'react-router-dom'\r\n\r\nReactDOM.render(<Router><Route component={App} /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}